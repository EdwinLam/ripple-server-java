<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ripple.dao.AccountMapper">
  <resultMap id="BaseResultMap" type="com.ripple.Account">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="accountName" jdbcType="VARCHAR" property="accountName" />
    <result column="createAt" jdbcType="TIMESTAMP" property="createAt" />
    <result column="updateAt" jdbcType="TIMESTAMP" property="updateAt" />
    <result column="createUid" jdbcType="VARCHAR" property="createUid" />
    <result column="updateUid" jdbcType="VARCHAR" property="updateUid" />
    <result column="status" jdbcType="TINYINT" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    id, accountName, createAt, updateAt, createUid, updateUid, status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from account
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from account
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.ripple.Account">
    insert into account (id, accountName, createAt, 
      updateAt, createUid, updateUid, 
      status)
    values (#{id,jdbcType=BIGINT}, #{accountName,jdbcType=VARCHAR}, #{createAt,jdbcType=TIMESTAMP}, 
      #{updateAt,jdbcType=TIMESTAMP}, #{createUid,jdbcType=VARCHAR}, #{updateUid,jdbcType=VARCHAR}, 
      #{status,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.ripple.Account">
    insert into account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="accountName != null">
        accountName,
      </if>
      <if test="createAt != null">
        createAt,
      </if>
      <if test="updateAt != null">
        updateAt,
      </if>
      <if test="createUid != null">
        createUid,
      </if>
      <if test="updateUid != null">
        updateUid,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="accountName != null">
        #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null">
        #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateAt != null">
        #{updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createUid != null">
        #{createUid,jdbcType=VARCHAR},
      </if>
      <if test="updateUid != null">
        #{updateUid,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ripple.Account">
    update account
    <set>
      <if test="accountName != null">
        accountName = #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null">
        createAt = #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateAt != null">
        updateAt = #{updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createUid != null">
        createUid = #{createUid,jdbcType=VARCHAR},
      </if>
      <if test="updateUid != null">
        updateUid = #{updateUid,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ripple.Account">
    update account
    set accountName = #{accountName,jdbcType=VARCHAR},
      createAt = #{createAt,jdbcType=TIMESTAMP},
      updateAt = #{updateAt,jdbcType=TIMESTAMP},
      createUid = #{createUid,jdbcType=VARCHAR},
      updateUid = #{updateUid,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>